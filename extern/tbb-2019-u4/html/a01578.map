<map id="internal::function_input_base&lt; Input, Policy, A, ImplType &gt;" name="internal::function_input_base&lt; Input, Policy, A, ImplType &gt;">
<area shape="rect" id="node6" href="$a00289.html" title="Implements methods for a function node that takes a type Input as input and sends. " alt="" coords="5,1426,193,1665"/>
<area shape="rect" id="node7" href="$a00506.html" title="Implements methods for a function node that takes a type Input as input. " alt="" coords="217,1411,405,1679"/>
<area shape="rect" id="node8" href="$a00291.html" title="{internal::function\l_input_base\&lt; Input,\l Policy, A, function\l_input\&lt; Input, Output,\l Policy, A \&gt; \&gt;\n|# my_graph_ref\l# my_max_concurrency\l# my_concurrency\l# my_queue\l# my_predecessors\l&#45; forwarder_busy\l&#45; my_aggregator\l|+ __TBB_STATIC_ASSERT()\l+ function_input_base()\l+ function_input_base()\l+ ~function_input_base()\l+ try_put_task()\l+ register_predecessor()\l+ remove_predecessor()\l# reset_function_input_base()\l# reset_receiver()\l# graph_reference()\l# try_get_postponed_task()\l&#45; perform_queued_requests()\l&#45; handle_operations()\l&#45; internal_try_put_task()\l&#45; internal_forward()\l&#45; internal_try_put_bypass()\l&#45; try_put_task_impl()\l&#45; try_put_task_impl()\l&#45; apply_body_bypass()\l&#45; create_body_task()\l&#45; forward_task()\l&#45; create_forward_task()\l&#45; spawn_forward_task()\l}" alt="" coords="429,1272,628,1819"/>
<area shape="rect" id="node9" href="$a00291.html" title="{internal::function\l_input_base\&lt; Input,\l Policy, A, multifunction\l_input\&lt; Input, OutputPortSet,\l Policy, A \&gt; \&gt;\n|# my_graph_ref\l# my_max_concurrency\l# my_concurrency\l# my_queue\l# my_predecessors\l&#45; forwarder_busy\l&#45; my_aggregator\l|+ __TBB_STATIC_ASSERT()\l+ function_input_base()\l+ function_input_base()\l+ ~function_input_base()\l+ try_put_task()\l+ register_predecessor()\l+ remove_predecessor()\l# reset_function_input_base()\l# reset_receiver()\l# graph_reference()\l# try_get_postponed_task()\l&#45; perform_queued_requests()\l&#45; handle_operations()\l&#45; internal_try_put_task()\l&#45; internal_forward()\l&#45; internal_try_put_bypass()\l&#45; try_put_task_impl()\l&#45; try_put_task_impl()\l&#45; apply_body_bypass()\l&#45; create_body_task()\l&#45; forward_task()\l&#45; create_forward_task()\l&#45; spawn_forward_task()\l}" alt="" coords="652,1272,851,1819"/>
<area shape="rect" id="node2" href="$a00644.html" title="{tbb::flow::interface10\l::receiver\&lt; Input \&gt;\n||+ try_put()\l+ try_put()\l# try_put_task_wrapper()\l# try_put_task()\l}" alt="" coords="196,463,363,599"/>
<area shape="rect" id="node3" href="$a00875.html" title="{tbb::flow::interface10\l::internal::untyped_receiver\n||+ ~untyped_receiver()\l+ try_put()\l+ register_predecessor()\l+ remove_predecessor()\l# try_put_task()\l# try_put_task_wrapper()\l# graph_reference()\l# reset_receiver()\l# is_continue_receiver()\l}" alt="" coords="207,5,386,215"/>
<area shape="rect" id="node4" href="$a00644.html" title="Pure virtual template class that defines a receiver of messages of type T. " alt="" coords="296,264,463,400"/>
<area shape="rect" id="node5" href="$a00515.html" title="Base class for types that should not be assigned. " alt="" coords="387,492,545,569"/>
</map>
