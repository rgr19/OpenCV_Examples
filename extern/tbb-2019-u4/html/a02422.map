<map id="tbb::flow::interface10::internal::function_input&lt; Input, Output, Policy, A &gt;" name="tbb::flow::interface10::internal::function_input&lt; Input, Output, Policy, A &gt;">
<area shape="rect" id="node2" href="$a00292.html" title="{tbb::flow::interface10\l::internal::function_input\l_base\&lt; Input, Policy, A,\l function_input\&lt; Input, Output,\l Policy, A \&gt; \&gt;\n|&#45; forwarder_busy\l|+ __TBB_STATIC_ASSERT()\l+ function_input_base()\l+ function_input_base()\l+ ~function_input_base()\l+ try_put_task()\l+ register_predecessor()\l+ remove_predecessor()\l# reset_function_input_base()\l# reset_receiver()\l# graph_reference()\l# try_get_postponed_task()\l&#45; perform_queued_requests()\l&#45; handle_operations()\l&#45; internal_try_put_task()\l&#45; internal_forward()\l&#45; internal_try_put_bypass()\l&#45; try_put_task_impl()\l&#45; try_put_task_impl()\l&#45; apply_body_bypass()\l&#45; create_body_task()\l&#45; forward_task()\l&#45; create_forward_task()\l&#45; spawn_forward_task()\l}" alt="" coords="1451,3220,1649,3679"/>
<area shape="rect" id="node3" href="$a00644.html" title="{tbb::flow::interface10\l::receiver\&lt; Input \&gt;\n||+ try_put()\l+ try_put()\l# try_put_task_wrapper()\l# try_put_task()\l}" alt="" coords="1885,2471,2052,2607"/>
<area shape="rect" id="node36" href="$a00292.html" title="Input and scheduling for a function node that takes a type Input as input. " alt="" coords="1451,2684,1649,3128"/>
<area shape="rect" id="node4" href="$a00875.html" title="{tbb::flow::interface10\l::internal::untyped_receiver\n||+ ~untyped_receiver()\l+ try_put()\l+ register_predecessor()\l+ remove_predecessor()\l# try_put_task()\l# try_put_task_wrapper()\l# graph_reference()\l# reset_receiver()\l# is_continue_receiver()\l}" alt="" coords="1945,1677,2123,1887"/>
<area shape="rect" id="node5" href="$a00644.html" title="Pure virtual template class that defines a receiver of messages of type T. " alt="" coords="2023,2096,2189,2232"/>
<area shape="rect" id="node22" href="$a00601.html" title="{tbb::flow::interface10\l::internal::predecessor\l_cache\&lt; input_type, tbb\l::null_mutex \&gt;\n||+ predecessor_cache()\l+ set_owner()\l+ get_item()\l+ reset()\l}" alt="" coords="1663,2456,1826,2621"/>
<area shape="rect" id="node30" href="$a00601.html" title="A cache of predecessors that only supports try_get. " alt="" coords="1673,2089,1827,2239"/>
<area shape="rect" id="node6" href="$a00515.html" title="Base class for types that should not be assigned. " alt="" coords="1698,145,1855,223"/>
<area shape="rect" id="node10" href="$a00516.html" title="Base class for types that should not be copied or assigned. " alt="" coords="722,355,869,447"/>
<area shape="rect" id="node37" href="$a00280.html" title="A functor that takes an Input and generates an Output. " alt="" coords="2197,479,2359,615"/>
<area shape="rect" id="node9" href="$a00308.html" title="The graph class. " alt="" coords="419,1993,593,2335"/>
<area shape="rect" id="node17" href="$a00310.html" title="The base of all graph nodes. " alt="" coords="539,2478,683,2599"/>
<area shape="rect" id="node19" href="$a00512.html" title="{tbb::internal::mutex\l_copy_deprecated_and\l_disabled\n||}" alt="" coords="833,785,989,892"/>
<area shape="rect" id="node21" href="$a00784.html" title="Used to form groups of tasks. " alt="" coords="446,1063,646,1653"/>
<area shape="rect" id="node13" href="$a00778.html" title="Base class for user&#45;defined tasks. " alt="" coords="5,639,220,1039"/>
<area shape="rect" id="node15" title="STL class. " alt="" coords="568,247,665,324"/>
<area shape="rect" id="node25" title="STL class. " alt="" coords="1253,145,1367,223"/>
<area shape="rect" id="node18" href="$a00721.html" title="A lock that occupies a single byte. " alt="" coords="833,1692,979,1872"/>
<area shape="rect" id="node26" href="$a00522.html" title="A mutex which does nothing. " alt="" coords="1267,1729,1414,1835"/>
<area shape="rect" id="node23" href="$a00519.html" title="{tbb::flow::interface10\l::internal::node_cache\l\&lt; untyped_sender, tbb::\lnull_mutex \&gt;\n||+ empty()\l+ add()\l+ remove()\l+ clear()\l# internal_empty()\l# internal_size()\l# internal_push()\l# internal_pop()\l}" alt="" coords="1489,2052,1649,2276"/>
<area shape="rect" id="node31" href="$a00519.html" title="{tbb::flow::interface10\l::internal::node_cache\l\&lt; untyped_sender, M \&gt;\n||+ empty()\l+ add()\l+ remove()\l+ clear()\l# internal_empty()\l# internal_size()\l# internal_push()\l# internal_pop()\l}" alt="" coords="1763,1677,1921,1887"/>
<area shape="rect" id="node27" href="$a00519.html" title="A node_cache maintains a std::queue of elements of type T. Each operation is protected by a lock..." alt="" coords="1655,734,1805,943"/>
<area shape="rect" id="node32" href="$a00293.html" title="{tbb::flow::interface10\l::internal::function_input\l_queue\&lt; T, A \&gt;\n||+ empty()\l+ front()\l+ pop()\l+ pop()\l+ push()\l}" alt="" coords="769,2456,931,2621"/>
<area shape="rect" id="node33" href="$a00413.html" title="{tbb::flow::interface10\l::internal::item_buffer\l\&lt; T, A \&gt;\n||+ item_buffer()\l+ ~item_buffer()\l+ reset()\l# buffer_empty()\l# item()\l# item()\l# my_item_valid()\l# my_item_reserved()\l# get_my_item()\l# set_my_item()\l# fetch_item()\l# move_item()\l# place_item()\land 16 more...\l}" alt="" coords="833,2015,981,2313"/>
<area shape="rect" id="node34" href="$a00837.html" title="type mimicking std::pair but with trailing fill to ensure each element of an array ..." alt="" coords="1004,1714,1160,1850"/>
</map>
