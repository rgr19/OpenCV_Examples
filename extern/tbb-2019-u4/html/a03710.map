<map id="tbb::strict_ppl::internal::concurrent_queue_iterator&lt; Container, Value &gt;" name="tbb::strict_ppl::internal::concurrent_queue_iterator&lt; Container, Value &gt;">
<area shape="rect" id="node2" href="$a00153.html" title="{tbb::strict_ppl::internal\l::concurrent_queue_iterator\l_base_v3\&lt; tbb_remove_cv\&lt; Value\l \&gt;::type \&gt;\n||# concurrent_queue_iterator\l_base_v3()\l# concurrent_queue_iterator\l_base_v3()\l# concurrent_queue_iterator\l_base_v3()\l# assign()\l# advance()\l# ~concurrent_queue_iterator\l_base_v3()\l}" alt="" coords="144,3665,368,3919"/>
<area shape="rect" id="node3" href="$a00515.html" title="Base class for types that should not be assigned. " alt="" coords="239,255,396,333"/>
<area shape="rect" id="node6" href="$a00155.html" title="{tbb::strict_ppl::internal\l::concurrent_queue_iterator\l_rep\&lt; tbb_remove_cv\&lt; Value\l \&gt;::type \&gt;\n||+ concurrent_queue_iterator_rep()\l+ get_item()\l}" alt="" coords="633,3151,850,3287"/>
<area shape="rect" id="node11" href="$a00516.html" title="Base class for types that should not be copied or assigned. " alt="" coords="776,641,923,733"/>
<area shape="rect" id="node32" href="$a00155.html" title="{tbb::strict_ppl::internal\l::concurrent_queue_iterator\l_rep\&lt; T \&gt;\n|+ my_queue\l+ array\l|+ concurrent_queue_iterator_rep()\l+ get_item()\l}" alt="" coords="303,1896,521,2032"/>
<area shape="rect" id="node33" href="$a00153.html" title="Constness&#45;independent portion of concurrent_queue_iterator. " alt="" coords="258,3349,449,3588"/>
<area shape="rect" id="node35" href="$a00155.html" title="{tbb::strict_ppl::internal\l::concurrent_queue_iterator\l_rep\&lt; Value \&gt;\n||+ concurrent_queue_iterator_rep()\l+ get_item()\l}" alt="" coords="270,3158,487,3279"/>
<area shape="rect" id="node4" href="$a00804.html" title="{tbb::strict_ppl::internal\l::tbb_remove_cv\&lt; Value \&gt;\n||}" alt="" coords="48,3423,224,3515"/>
<area shape="rect" id="node5" href="$a00804.html" title="Similar to C++0x std::remove_cv. " alt="" coords="43,3173,194,3265"/>
<area shape="rect" id="node7" href="$a00148.html" title="{tbb::strict_ppl::internal\l::concurrent_queue_base\l_v3\&lt; tbb_remove_cv\&lt; Value\l \&gt;::type \&gt;\n||# concurrent_queue_base_v3()\l# ~concurrent_queue_base_v3()\l# internal_push()\l# internal_try_pop()\l# internal_size()\l# internal_empty()\l# internal_finish_clear()\l# internal_throw_exception()\l# assign()\l# internal_swap()\l&#45; allocate_page()\l&#45; deallocate_page()\l&#45; allocate_block()\l&#45; deallocate_block()\l}" alt="" coords="1239,2761,1447,3073"/>
<area shape="rect" id="node8" href="$a00157.html" title="Abstract class to define interface for page allocation/deallocation. " alt="" coords="1436,2107,1615,2258"/>
<area shape="rect" id="node31" href="$a00148.html" title="base class of concurrent_queue " alt="" coords="1280,2387,1488,2684"/>
<area shape="rect" id="node36" href="$a00148.html" title="{tbb::strict_ppl::internal\l::concurrent_queue_base\l_v3\&lt; Value \&gt;\n||# concurrent_queue_base_v3()\l# ~concurrent_queue_base_v3()\l# internal_push()\l# internal_try_pop()\l# internal_size()\l# internal_empty()\l# internal_finish_clear()\l# internal_throw_exception()\l# assign()\l# internal_swap()\l&#45; allocate_page()\l&#45; deallocate_page()\l&#45; allocate_block()\l&#45; deallocate_block()\l}" alt="" coords="923,2769,1131,3066"/>
<area shape="rect" id="node9" href="$a00158.html" title="{tbb::strict_ppl::internal\l::concurrent_queue_rep\l\&lt; tbb_remove_cv\&lt; Value \&gt;\l::type \&gt;\n||+ choose()\l+ index()\l}" alt="" coords="971,2467,1151,2603"/>
<area shape="rect" id="node10" href="$a00160.html" title="parts of concurrent_queue_rep that do not have references to micro_queue " alt="" coords="642,1692,835,1813"/>
<area shape="rect" id="node30" href="$a00158.html" title="representation of concurrent_queue_base " alt="" coords="749,2129,939,2236"/>
<area shape="rect" id="node37" href="$a00158.html" title="{tbb::strict_ppl::internal\l::concurrent_queue_rep\l\&lt; Value \&gt;\n||+ choose()\l+ index()\l}" alt="" coords="783,2475,942,2596"/>
<area shape="rect" id="node23" href="$a00496.html" title="{tbb::strict_ppl::internal\l::micro_queue\&lt; tbb_remove\l_cv\&lt; Value \&gt;::type \&gt;\n||+ push()\l+ pop()\l+ assign()\l+ make_copy()\l+ invalidate_page_and\l_rethrow()\l+ get_ref()\l&#45; copy_item()\l&#45; copy_item()\l&#45; assign_and_destroy_item()\l&#45; spin_wait_until_my_turn()\l}" alt="" coords="1225,2056,1412,2309"/>
<area shape="rect" id="node28" href="$a00512.html" title="{tbb::internal::mutex\l_copy_deprecated_and\l_disabled\n||}" alt="" coords="858,1038,1014,1145"/>
<area shape="rect" id="node29" href="$a00496.html" title="A queue using simple locking. " alt="" coords="1225,1633,1412,1872"/>
<area shape="rect" id="node38" href="$a00496.html" title="{tbb::strict_ppl::internal\l::micro_queue\&lt; Value \&gt;\n||+ push()\l+ pop()\l+ assign()\l+ make_copy()\l+ invalidate_page_and\l_rethrow()\l+ get_ref()\l&#45; copy_item()\l&#45; copy_item()\l&#45; assign_and_destroy_item()\l&#45; spin_wait_until_my_turn()\l}" alt="" coords="1015,2063,1201,2302"/>
<area shape="rect" id="node12" href="$a00079.html" title="{tbb::atomic\&lt; size_t \&gt;\n||+ atomic()\l+ atomic()\l+ operator=()\l+ operator=()\l}" alt="" coords="1413,1376,1560,1497"/>
<area shape="rect" id="node13" href="$a00083.html" title="{tbb::internal::atomic\l_impl\&lt; size_t \&gt;\n||+ atomic_impl()\l+ atomic_impl()\l+ fetch_and_store()\l+ fetch_and_store()\l+ compare_and_swap()\l+ compare_and_swap()\l+ operator value_type()\l+ load()\l+ load()\l+ store()\l+ store()\l# store_with_release()\l&#45; to_bits()\l&#45; to_value()\l&#45; to_bits_ref()\l}" alt="" coords="1410,943,1569,1240"/>
<area shape="rect" id="node14" href="$a00043.html" title="{tbb::internal::aligned\l_storage\&lt; size_t, sizeof\l(size_t)\&gt;\n||}" alt="" coords="1392,386,1555,493"/>
<area shape="rect" id="node15" href="$a00043.html" title="{tbb::internal::aligned\l_storage\&lt; value_type,\l size \&gt;\n||}" alt="" coords="1693,5,1843,112"/>
<area shape="rect" id="node17" href="$a00043.html" title="{tbb::internal::aligned\l_storage\&lt; T, sizeof(T)\&gt;\n||}" alt="" coords="1785,248,1943,340"/>
<area shape="rect" id="node21" href="$a00043.html" title="{tbb::internal::aligned\l_storage\&lt; ticket, sizeof\l(ticket)\&gt;\n||}" alt="" coords="1958,386,2117,493"/>
<area shape="rect" id="node26" href="$a00043.html" title="{tbb::internal::aligned\l_storage\&lt; tbb::strict\l_ppl::internal::concurrent\l_queue_rep_base::page *, sizeof\l(tbb::strict_ppl::internal::concurrent\l_queue_rep_base::page *)\&gt;\n||}" alt="" coords="1561,364,1785,515"/>
<area shape="rect" id="node16" href="$a00083.html" title="Base class that provides basic functionality for atomic&lt;T&gt; without fetch_and_add. ..." alt="" coords="1785,539,1943,836"/>
<area shape="rect" id="node18" href="$a00079.html" title="Primary template for atomic. " alt="" coords="1799,1031,1918,1152"/>
<area shape="rect" id="node20" href="$a00083.html" title="{tbb::internal::atomic\l_impl\&lt; ticket \&gt;\n||+ atomic_impl()\l+ atomic_impl()\l+ fetch_and_store()\l+ fetch_and_store()\l+ compare_and_swap()\l+ compare_and_swap()\l+ operator value_type()\l+ load()\l+ load()\l+ store()\l+ store()\l# store_with_release()\l&#45; to_bits()\l&#45; to_value()\l&#45; to_bits_ref()\l}" alt="" coords="1942,943,2101,1240"/>
<area shape="rect" id="node25" href="$a00083.html" title="{tbb::internal::atomic\l_impl\&lt; tbb::strict_ppl\l::internal::concurrent\l_queue_rep_base::page * \&gt;\n||+ atomic_impl()\l+ atomic_impl()\l+ fetch_and_store()\l+ fetch_and_store()\l+ compare_and_swap()\l+ compare_and_swap()\l+ operator value_type()\l+ load()\l+ load()\l+ store()\l+ store()\l# store_with_release()\l&#45; to_bits()\l&#45; to_value()\l&#45; to_bits_ref()\l}" alt="" coords="1593,928,1775,1255"/>
<area shape="rect" id="node19" href="$a00079.html" title="{tbb::atomic\&lt; ticket \&gt;\n||+ atomic()\l+ atomic()\l+ operator=()\l+ operator=()\l}" alt="" coords="1809,1376,1951,1497"/>
<area shape="rect" id="node24" href="$a00079.html" title="{tbb::atomic\&lt; tbb::strict\l_ppl::internal::concurrent\l_queue_rep_base::page * \&gt;\n||+ atomic()\l+ atomic()\l+ operator=()\l+ operator=()\l}" alt="" coords="1584,1361,1765,1512"/>
<area shape="rect" id="node27" href="$a00721.html" title="A lock that occupies a single byte. " alt="" coords="868,1347,1015,1527"/>
</map>
