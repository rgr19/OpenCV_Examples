<map id="hash_buffer&lt; Key, ValueType, ValueToKey, HashCompare, Allocator &gt;" name="hash_buffer&lt; Key, ValueType, ValueToKey, HashCompare, Allocator &gt;">
<area shape="rect" id="node3" href="$a00435.html" title="{internal::join_node\l_FE\&lt; key_matching\&lt; K,\l KHash \&gt;, InputTuple,\l OutputTuple \&gt;\n|+ N\l# my_inputs\l# my_node\l&#45; my_aggregator\l|+ join_node_FE()\l+ join_node_FE()\l+ set_my_node()\l+ reset_port_count()\l+ increment_key_count()\l+ decrement_port_count()\l+ increment_port_count()\l+ input_ports()\l# reset()\l# tuple_build_may_succeed()\l# try_to_make_tuple()\l# tuple_accepted()\l# tuple_rejected()\l&#45; fill_output_buffer()\l&#45; handle_operations()\l}" alt="" coords="5,763,196,1134"/>
<area shape="rect" id="node4" href="$a00323.html" title="{hash_buffer\&lt; tbb::internal\l::strip\&lt; K \&gt;::type &amp;, count\l_element\&lt; tbb::internal::strip\l\&lt; K \&gt;::type \&gt;, internal::type\l_to_key_function_body\&lt; count_element\l\&lt; tbb::internal::strip\&lt; K \&gt;::type \&gt;\l, tbb::internal::strip\&lt; K \&gt;::type &amp; \&gt;, KHash \&gt;\n|+ INITIAL_SIZE\l&#45; my_key\l&#45; my_size\l&#45; nelements\l&#45; pointer_array\l&#45; elements_array\l&#45; free_list\l|+ hash_buffer()\l+ ~hash_buffer()\l+ reset()\l+ set_key_func()\l+ get_key_func()\l+ insert_with_key()\l+ find_ref_with_key()\l+ find_with_key()\l+ delete_with_key()\l&#45; mask()\l&#45; set_up_free_list()\l&#45; grow_array()\l&#45; internal_insert_with_key()\l&#45; internal_initialize\l_buffer()\l&#45; internal_free_buffer()\l}" alt="" coords="221,712,503,1185"/>
</map>
