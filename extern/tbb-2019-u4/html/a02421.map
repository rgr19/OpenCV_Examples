<map id="tbb::flow::interface10::internal::function_input&lt; Input, Output, Policy, A &gt;" name="tbb::flow::interface10::internal::function_input&lt; Input, Output, Policy, A &gt;">
<area shape="rect" id="node8" href="$a00290.html" title="{tbb::flow::interface10\l::internal::function_input\l\&lt; Input, Output, Policy,\l Allocator \&gt;\n|# my_body\l# my_init_body\l|+ function_input()\l+ function_input()\l+ ~function_input()\l+ copy_function_object()\l+ apply_body_impl()\l+ apply_body_impl_bypass()\l# reset_function_input()\l# successors()\l}" alt="" coords="69,2169,257,2408"/>
<area shape="rect" id="node2" href="$a00292.html" title="{tbb::flow::interface10\l::internal::function_input\l_base\&lt; Input, Policy, A,\l function_input\&lt; Input, Output,\l Policy, A \&gt; \&gt;\n|# my_graph_ref\l# my_max_concurrency\l# my_concurrency\l# my_queue\l# my_predecessors\l&#45; forwarder_busy\l&#45; my_aggregator\l|+ __TBB_STATIC_ASSERT()\l+ function_input_base()\l+ function_input_base()\l+ ~function_input_base()\l+ try_put_task()\l+ register_predecessor()\l+ remove_predecessor()\l# reset_function_input_base()\l# reset_receiver()\l# graph_reference()\l# try_get_postponed_task()\l&#45; perform_queued_requests()\l&#45; handle_operations()\l&#45; internal_try_put_task()\l&#45; internal_forward()\l&#45; internal_try_put_bypass()\l&#45; try_put_task_impl()\l&#45; try_put_task_impl()\l&#45; apply_body_bypass()\l&#45; create_body_task()\l&#45; forward_task()\l&#45; create_forward_task()\l&#45; spawn_forward_task()\l}" alt="" coords="63,1272,262,1819"/>
<area shape="rect" id="node3" href="$a00644.html" title="{tbb::flow::interface10\l::receiver\&lt; Input \&gt;\n||+ try_put()\l+ try_put()\l# try_put_task_wrapper()\l# try_put_task()\l}" alt="" coords="209,463,375,599"/>
<area shape="rect" id="node7" href="$a00292.html" title="Input and scheduling for a function node that takes a type Input as input. " alt="" coords="78,648,277,1180"/>
<area shape="rect" id="node4" href="$a00875.html" title="{tbb::flow::interface10\l::internal::untyped_receiver\n||+ ~untyped_receiver()\l+ try_put()\l+ register_predecessor()\l+ remove_predecessor()\l# try_put_task()\l# try_put_task_wrapper()\l# graph_reference()\l# reset_receiver()\l# is_continue_receiver()\l}" alt="" coords="180,5,359,215"/>
<area shape="rect" id="node5" href="$a00644.html" title="Pure virtual template class that defines a receiver of messages of type T. " alt="" coords="269,264,435,400"/>
<area shape="rect" id="node6" href="$a00515.html" title="Base class for types that should not be assigned. " alt="" coords="5,492,163,569"/>
<area shape="rect" id="node9" href="$a00296.html" title="Implements a function node that supports Input &#45;&gt; Output. " alt="" coords="73,2457,253,2608"/>
</map>
