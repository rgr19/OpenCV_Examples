<map id="tbb::flow::interface10::internal::multifunction_input&lt; Input, OutputPortSet, Policy, A &gt;" name="tbb::flow::interface10::internal::multifunction_input&lt; Input, OutputPortSet, Policy, A &gt;">
<area shape="rect" id="node8" href="$a00507.html" title="{tbb::flow::interface10\l::internal::multifunction\l_input\&lt; Input, internal::\lwrap_tuple_elements\&lt; tbb::\lflow::tuple_size\&lt; tuple\&lt; Output\l \&gt; \&gt;::value, internal::multifunction\l_output, tuple\&lt; Output \&gt; \&gt;::type,\l Policy, Allocator \&gt;\n|+ N\l# my_body\l# my_init_body\l# my_output_ports\l|+ multifunction_input()\l+ multifunction_input()\l+ ~multifunction_input()\l+ copy_function_object()\l+ apply_body_impl_bypass()\l+ output_ports()\l# reset()\l}" alt="" coords="5,2637,223,2949"/>
<area shape="rect" id="node11" href="$a00507.html" title="{tbb::flow::interface10\l::internal::multifunction\l_input\&lt; Input, internal::\lwrap_tuple_elements\&lt; tbb::\lflow::tuple_size\&lt; Output \&gt;\l::value, internal::multifunction\l_output, Output \&gt;::type, Policy,\l Allocator \&gt;\n|+ N\l# my_body\l# my_init_body\l# my_output_ports\l|+ multifunction_input()\l+ multifunction_input()\l+ ~multifunction_input()\l+ copy_function_object()\l+ apply_body_impl_bypass()\l+ output_ports()\l# reset()\l}" alt="" coords="534,2301,739,2613"/>
<area shape="rect" id="node15" href="$a00507.html" title="{tbb::flow::interface10\l::internal::multifunction\l_input\&lt; kernel_input_tuple,\l internal::wrap_tuple_elements\l\&lt; tbb::flow::tuple_size\&lt; output\l_tuple \&gt;::value, internal::multifunction\l_output, output_tuple \&gt;::type, queueing,\l cache_aligned_allocator\&lt; kernel_input_tuple \&gt; \&gt;\n|+ N\l# my_body\l# my_init_body\l# my_output_ports\l|+ multifunction_input()\l+ multifunction_input()\l+ ~multifunction_input()\l+ copy_function_object()\l+ apply_body_impl_bypass()\l+ output_ports()\l# reset()\l}" alt="" coords="671,2637,978,2949"/>
<area shape="rect" id="node16" href="$a00507.html" title="{tbb::flow::interface10\l::internal::multifunction\l_input\&lt; indexer_node_output\l_type, internal::wrap_tuple\l_elements\&lt; tbb::flow::tuple\l_size\&lt; kernel_input_tuple \&gt;::\lvalue, internal::multifunction\l_output, kernel_input_tuple \&gt;::\ltype, queueing, cache_aligned_allocator\l\&lt; indexer_node_output_type \&gt; \&gt;\n|+ N\l# my_body\l# my_init_body\l# my_output_ports\l|+ multifunction_input()\l+ multifunction_input()\l+ ~multifunction_input()\l+ copy_function_object()\l+ apply_body_impl_bypass()\l+ output_ports()\l# reset()\l}" alt="" coords="180,2973,435,3315"/>
<area shape="rect" id="node2" href="$a00292.html" title="{tbb::flow::interface10\l::internal::function_input\l_base\&lt; Input, Policy, A,\l multifunction_input\&lt; Input,\l OutputPortSet, Policy, A \&gt; \&gt;\n|# my_graph_ref\l# my_max_concurrency\l# my_concurrency\l# my_queue\l# my_predecessors\l&#45; forwarder_busy\l&#45; my_aggregator\l|+ __TBB_STATIC_ASSERT()\l+ function_input_base()\l+ function_input_base()\l+ ~function_input_base()\l+ try_put_task()\l+ register_predecessor()\l+ remove_predecessor()\l# reset_function_input_base()\l# reset_receiver()\l# graph_reference()\l# try_get_postponed_task()\l&#45; perform_queued_requests()\l&#45; handle_operations()\l&#45; internal_try_put_task()\l&#45; internal_forward()\l&#45; internal_try_put_bypass()\l&#45; try_put_task_impl()\l&#45; try_put_task_impl()\l&#45; apply_body_bypass()\l&#45; create_body_task()\l&#45; forward_task()\l&#45; create_forward_task()\l&#45; spawn_forward_task()\l}" alt="" coords="308,1287,507,1833"/>
<area shape="rect" id="node3" href="$a00644.html" title="{tbb::flow::interface10\l::receiver\&lt; Input \&gt;\n||+ try_put()\l+ try_put()\l# try_put_task_wrapper()\l# try_put_task()\l}" alt="" coords="252,463,419,599"/>
<area shape="rect" id="node7" href="$a00292.html" title="Input and scheduling for a function node that takes a type Input as input. " alt="" coords="329,648,528,1180"/>
<area shape="rect" id="node4" href="$a00875.html" title="{tbb::flow::interface10\l::internal::untyped_receiver\n||+ ~untyped_receiver()\l+ try_put()\l+ register_predecessor()\l+ remove_predecessor()\l# try_put_task()\l# try_put_task_wrapper()\l# graph_reference()\l# reset_receiver()\l# is_continue_receiver()\l}" alt="" coords="263,5,442,215"/>
<area shape="rect" id="node5" href="$a00644.html" title="Pure virtual template class that defines a receiver of messages of type T. " alt="" coords="352,264,519,400"/>
<area shape="rect" id="node6" href="$a00515.html" title="Base class for types that should not be assigned. " alt="" coords="465,492,622,569"/>
<area shape="rect" id="node9" href="$a00508.html" title="{tbb::flow::interface10\l::multifunction_node\&lt;\l Input, tuple\&lt; Output \&gt;\l, Policy, Allocator \&gt;\n|# N\l|+ multifunction_node()\l+ multifunction_node()\l# reset_node()\l}" alt="" coords="126,3392,281,3543"/>
<area shape="rect" id="node10" href="$a00076.html" title="Implements async node. " alt="" coords="107,3592,299,3816"/>
<area shape="rect" id="node12" href="$a00508.html" title="implements a function node that supports Input &#45;&gt; (set of outputs) " alt="" coords="485,3069,636,3219"/>
<area shape="rect" id="node13" href="$a00508.html" title="{tbb::flow::interface10\l::multifunction_node\&lt;\l kernel_input_tuple, output\l_tuple \&gt;\n|# N\l|+ multifunction_node()\l+ multifunction_node()\l# reset_node()\l}" alt="" coords="639,3392,813,3543"/>
<area shape="rect" id="node14" href="$a00508.html" title="{tbb::flow::interface10\l::multifunction_node\&lt;\l indexer_node_output_type,\l kernel_input_tuple \&gt;\n|# N\l|+ multifunction_node()\l+ multifunction_node()\l# reset_node()\l}" alt="" coords="389,3392,572,3543"/>
</map>
