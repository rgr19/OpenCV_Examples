<map id="tbb::interface5::concurrent_hash_map&lt; Key, T, HashCompare, Allocator &gt;::call_clear_on_leave" name="tbb::interface5::concurrent_hash_map&lt; Key, T, HashCompare, Allocator &gt;::call_clear_on_leave">
<area shape="rect" id="node2" href="$a00143.html" title="Unordered map from Key to T. " alt="" coords="703,2017,939,2564"/>
<area shape="rect" id="node3" href="$a00326.html" title="base class of concurrent_hash_map " alt="" coords="581,1657,776,1955"/>
<area shape="rect" id="node4" href="$a00115.html" title="Bucket type. " alt="" coords="35,1444,207,1536"/>
<area shape="rect" id="node5" href="$a00516.html" title="Base class for types that should not be copied or assigned. " alt="" coords="56,139,203,231"/>
<area shape="rect" id="node8" href="$a00512.html" title="{tbb::internal::mutex\l_copy_deprecated_and\l_disabled\n||}" alt="" coords="51,316,207,423"/>
<area shape="rect" id="node9" href="$a00328.html" title="Node base type. " alt="" coords="156,1172,316,1264"/>
<area shape="rect" id="node6" href="$a00515.html" title="Base class for types that should not be assigned. " alt="" coords="51,5,208,83"/>
<area shape="rect" id="node7" href="$a00722.html" title="Fast, unfair, spinning reader&#45;writer lock with backoff and writer&#45;preference. " alt="" coords="43,577,215,1007"/>
<area shape="rect" id="node10" href="$a00079.html" title="{tbb::atomic\&lt; size_type \&gt;\n||+ atomic()\l+ atomic()\l+ operator=()\l+ operator=()\l}" alt="" coords="398,1429,565,1551"/>
<area shape="rect" id="node11" href="$a00083.html" title="{tbb::internal::atomic\l_impl\&lt; size_type \&gt;\n||+ atomic_impl()\l+ atomic_impl()\l+ fetch_and_store()\l+ fetch_and_store()\l+ compare_and_swap()\l+ compare_and_swap()\l+ operator value_type()\l+ load()\l+ load()\l+ store()\l+ store()\l# store_with_release()\l&#45; to_bits()\l&#45; to_value()\l&#45; to_bits_ref()\l}" alt="" coords="402,1069,561,1367"/>
<area shape="rect" id="node12" href="$a00043.html" title="{tbb::internal::aligned\l_storage\&lt; size_type, sizeof\l(size_type)\&gt;\n||}" alt="" coords="386,447,569,553"/>
<area shape="rect" id="node13" href="$a00043.html" title="{tbb::internal::aligned\l_storage\&lt; value_type,\l size \&gt;\n||}" alt="" coords="567,132,718,239"/>
<area shape="rect" id="node15" href="$a00043.html" title="{tbb::internal::aligned\l_storage\&lt; T, sizeof(T)\&gt;\n||}" alt="" coords="563,323,722,415"/>
<area shape="rect" id="node19" href="$a00043.html" title="{tbb::internal::aligned\l_storage\&lt; hashcode_t,\l sizeof(hashcode_t)\&gt;\n||}" alt="" coords="729,447,884,553"/>
<area shape="rect" id="node14" href="$a00083.html" title="Base class that provides basic functionality for atomic&lt;T&gt; without fetch_and_add. ..." alt="" coords="575,643,734,941"/>
<area shape="rect" id="node16" href="$a00079.html" title="Primary template for atomic. " alt="" coords="585,1157,703,1279"/>
<area shape="rect" id="node18" href="$a00083.html" title="{tbb::internal::atomic\l_impl\&lt; hashcode_t \&gt;\n||+ atomic_impl()\l+ atomic_impl()\l+ fetch_and_store()\l+ fetch_and_store()\l+ compare_and_swap()\l+ compare_and_swap()\l+ operator value_type()\l+ load()\l+ load()\l+ store()\l+ store()\l# store_with_release()\l&#45; to_bits()\l&#45; to_value()\l&#45; to_bits_ref()\l}" alt="" coords="727,1069,886,1367"/>
<area shape="rect" id="node17" href="$a00079.html" title="{tbb::atomic\&lt; hashcode_t \&gt;\n||+ atomic()\l+ atomic()\l+ operator=()\l+ operator=()\l}" alt="" coords="589,1429,768,1551"/>
<area shape="rect" id="node21" href="$a00053.html" title="{tbb::internal::allocator\l_rebind\&lt; Allocator, node \&gt;\n||}" alt="" coords="830,1760,1005,1852"/>
<area shape="rect" id="node22" href="$a00053.html" title="{tbb::internal::allocator\l_rebind\&lt; Alloc, T \&gt;\n||}" alt="" coords="889,1444,1036,1536"/>
</map>
