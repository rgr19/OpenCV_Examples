<map id="tbb::flow::interface10::multifunction_node&lt; Input, Output, Policy, Allocator &gt;" name="tbb::flow::interface10::multifunction_node&lt; Input, Output, Policy, Allocator &gt;">
<area shape="rect" id="node2" href="$a00310.html" title="The base of all graph nodes. " alt="" coords="1097,1600,1241,1721"/>
<area shape="rect" id="node5" href="$a00308.html" title="The graph class. " alt="" coords="747,1872,921,2213"/>
<area shape="rect" id="node3" href="$a00516.html" title="Base class for types that should not be copied or assigned. " alt="" coords="886,355,1033,447"/>
<area shape="rect" id="node13" href="$a00512.html" title="{tbb::internal::mutex\l_copy_deprecated_and\l_disabled\n||}" alt="" coords="801,664,957,771"/>
<area shape="rect" id="node15" href="$a00784.html" title="Used to form groups of tasks. " alt="" coords="898,941,1098,1532"/>
<area shape="rect" id="node4" href="$a00515.html" title="Base class for types that should not be assigned. " alt="" coords="881,145,1038,223"/>
<area shape="rect" id="node17" href="$a00292.html" title="{tbb::flow::interface10\l::internal::function_input\l_base\&lt; Input, Policy, Allocator,\l multifunction_input\&lt; Input,\l internal::wrap_tuple_elements\l\&lt; tbb::flow::tuple_size\&lt; Output\l \&gt;::value, internal::multifunction\l_output, Output \&gt;::type, Policy, Allocator \&gt; \&gt;\n|&#45; forwarder_busy\l|+ __TBB_STATIC_ASSERT()\l+ function_input_base()\l+ function_input_base()\l+ ~function_input_base()\l+ try_put_task()\l+ register_predecessor()\l+ remove_predecessor()\l# reset_function_input_base()\l# reset_receiver()\l# graph_reference()\l# try_get_postponed_task()\l&#45; perform_queued_requests()\l&#45; handle_operations()\l&#45; internal_try_put_task()\l&#45; internal_forward()\l&#45; internal_try_put_bypass()\l&#45; try_put_task_impl()\l&#45; try_put_task_impl()\l&#45; apply_body_bypass()\l&#45; create_body_task()\l&#45; forward_task()\l&#45; create_forward_task()\l&#45; spawn_forward_task()\l}" alt="" coords="1565,3143,1849,3645"/>
<area shape="rect" id="node37" href="$a00292.html" title="Input and scheduling for a function node that takes a type Input as input. " alt="" coords="1592,2563,1791,3007"/>
<area shape="rect" id="node38" href="$a00502.html" title="function_body that takes an Input and a set of output ports " alt="" coords="599,3319,776,3469"/>
<area shape="rect" id="node42" href="$a00292.html" title="{tbb::flow::interface10\l::internal::function_input\l_base\&lt; Input, Policy, A,\l multifunction_input\&lt; Input,\l OutputPortSet, Policy, A \&gt; \&gt;\n|&#45; forwarder_busy\l|+ __TBB_STATIC_ASSERT()\l+ function_input_base()\l+ function_input_base()\l+ ~function_input_base()\l+ try_put_task()\l+ register_predecessor()\l+ remove_predecessor()\l# reset_function_input_base()\l# reset_receiver()\l# graph_reference()\l# try_get_postponed_task()\l&#45; perform_queued_requests()\l&#45; handle_operations()\l&#45; internal_try_put_task()\l&#45; internal_forward()\l&#45; internal_try_put_bypass()\l&#45; try_put_task_impl()\l&#45; try_put_task_impl()\l&#45; apply_body_bypass()\l&#45; create_body_task()\l&#45; forward_task()\l&#45; create_forward_task()\l&#45; spawn_forward_task()\l}" alt="" coords="1109,3165,1308,3623"/>
<area shape="rect" id="node8" href="$a00778.html" title="Base class for user&#45;defined tasks. " alt="" coords="416,517,631,917"/>
<area shape="rect" id="node10" title="STL class. " alt="" coords="5,247,103,324"/>
<area shape="rect" id="node26" title="STL class. " alt="" coords="2501,145,2615,223"/>
<area shape="rect" id="node12" href="$a00721.html" title="A lock that occupies a single byte. " alt="" coords="801,1571,947,1751"/>
<area shape="rect" id="node27" href="$a00522.html" title="A mutex which does nothing. " alt="" coords="2219,1607,2366,1714"/>
<area shape="rect" id="node16" href="$a00507.html" title="{tbb::flow::interface10\l::internal::multifunction\l_input\&lt; Input, internal::\lwrap_tuple_elements\&lt; tbb::\lflow::tuple_size\&lt; Output \&gt;\l::value, internal::multifunction\l_output, Output \&gt;::type, Policy,\l Allocator \&gt;\n|+ N\l|+ multifunction_input()\l+ multifunction_input()\l+ ~multifunction_input()\l+ copy_function_object()\l+ apply_body_impl_bypass()\l+ output_ports()\l# reset()\l}" alt="" coords="726,4097,931,4365"/>
<area shape="rect" id="node18" href="$a00644.html" title="{tbb::flow::interface10\l::receiver\&lt; Input \&gt;\n||+ try_put()\l+ try_put()\l# try_put_task_wrapper()\l# try_put_task()\l}" alt="" coords="1817,2349,1984,2485"/>
<area shape="rect" id="node19" href="$a00875.html" title="{tbb::flow::interface10\l::internal::untyped_receiver\n||+ ~untyped_receiver()\l+ try_put()\l+ register_predecessor()\l+ remove_predecessor()\l# try_put_task()\l# try_put_task_wrapper()\l# graph_reference()\l# reset_receiver()\l# is_continue_receiver()\l}" alt="" coords="1939,1556,2118,1765"/>
<area shape="rect" id="node20" href="$a00644.html" title="Pure virtual template class that defines a receiver of messages of type T. " alt="" coords="1868,1975,2035,2111"/>
<area shape="rect" id="node23" href="$a00601.html" title="{tbb::flow::interface10\l::internal::predecessor\l_cache\&lt; input_type, tbb\l::null_mutex \&gt;\n||+ predecessor_cache()\l+ set_owner()\l+ get_item()\l+ reset()\l}" alt="" coords="2022,2335,2185,2500"/>
<area shape="rect" id="node31" href="$a00601.html" title="A cache of predecessors that only supports try_get. " alt="" coords="2179,1967,2334,2118"/>
<area shape="rect" id="node24" href="$a00519.html" title="{tbb::flow::interface10\l::internal::node_cache\l\&lt; untyped_sender, tbb::\lnull_mutex \&gt;\n||+ empty()\l+ add()\l+ remove()\l+ clear()\l# internal_empty()\l# internal_size()\l# internal_push()\l# internal_pop()\l}" alt="" coords="2515,1931,2675,2155"/>
<area shape="rect" id="node32" href="$a00519.html" title="{tbb::flow::interface10\l::internal::node_cache\l\&lt; untyped_sender, M \&gt;\n||+ empty()\l+ add()\l+ remove()\l+ clear()\l# internal_empty()\l# internal_size()\l# internal_push()\l# internal_pop()\l}" alt="" coords="2390,1556,2547,1765"/>
<area shape="rect" id="node28" href="$a00519.html" title="A node_cache maintains a std::queue of elements of type T. Each operation is protected by a lock..." alt="" coords="2377,613,2528,822"/>
<area shape="rect" id="node33" href="$a00293.html" title="{tbb::flow::interface10\l::internal::function_input\l_queue\&lt; T, A \&gt;\n||+ empty()\l+ front()\l+ pop()\l+ pop()\l+ push()\l}" alt="" coords="1207,2335,1368,2500"/>
<area shape="rect" id="node34" href="$a00413.html" title="{tbb::flow::interface10\l::internal::item_buffer\l\&lt; T, A \&gt;\n||+ item_buffer()\l+ ~item_buffer()\l+ reset()\l# buffer_empty()\l# item()\l# item()\l# my_item_valid()\l# my_item_reserved()\l# get_my_item()\l# set_my_item()\l# fetch_item()\l# move_item()\l# place_item()\land 16 more...\l}" alt="" coords="1348,1894,1496,2191"/>
<area shape="rect" id="node35" href="$a00837.html" title="type mimicking std::pair but with trailing fill to ensure each element of an array ..." alt="" coords="1327,1593,1483,1729"/>
<area shape="rect" id="node41" href="$a00507.html" title="Implements methods for a function node that takes a type Input as input. " alt="" coords="777,3752,971,3961"/>
<area shape="rect" id="node39" href="$a00910.html" title="{tbb::flow::interface10\l::internal::wrap_tuple\l_elements\&lt; tbb::flow::tuple\l_size\&lt; Output \&gt;::value, internal\l::multifunction_output, Output \&gt;\n||}" alt="" coords="383,3789,589,3925"/>
<area shape="rect" id="node40" href="$a00910.html" title="{tbb::flow::interface10\l::internal::wrap_tuple\l_elements\&lt; N, PT, TypeTuple \&gt;\n||}" alt="" coords="363,3341,574,3447"/>
</map>
