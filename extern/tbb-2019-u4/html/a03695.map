<map id="tbb::internal::rml::private_server" name="tbb::internal::rml::private_server">
<area shape="rect" id="node16" href="$a00606.html" title="{tbb::internal::rml\l::private_worker\n|&#45; my_client\l&#45; my_handle\l|# private_worker()\l&#45; run()\l&#45; wake_or_launch()\l&#45; start_shutdown()\l&#45; thread_routine()\l&#45; release_handle()\l}" alt="" coords="471,1832,603,2012"/>
<area shape="rect" id="node3" href="$a00516.html" title="Base class for types that should not be copied or assigned. " alt="" coords="726,1281,873,1373"/>
<area shape="rect" id="node4" href="$a00515.html" title="Base class for types that should not be assigned. " alt="" coords="725,987,882,1064"/>
<area shape="rect" id="node5" href="$a00079.html" title="{tbb::atomic\&lt; int \&gt;\n||+ atomic()\l+ atomic()\l+ operator=()\l+ operator=()\l}" alt="" coords="22,1266,147,1387"/>
<area shape="rect" id="node6" href="$a00083.html" title="{tbb::internal::atomic\l_impl\&lt; int \&gt;\n||+ atomic_impl()\l+ atomic_impl()\l+ fetch_and_store()\l+ fetch_and_store()\l+ compare_and_swap()\l+ compare_and_swap()\l+ operator value_type()\l+ load()\l+ load()\l+ store()\l+ store()\l# store_with_release()\l&#45; to_bits()\l&#45; to_value()\l&#45; to_bits_ref()\l}" alt="" coords="5,877,164,1174"/>
<area shape="rect" id="node7" href="$a00043.html" title="{tbb::internal::aligned\l_storage\&lt; int, sizeof(int)\&gt;\n||}" alt="" coords="13,357,183,449"/>
<area shape="rect" id="node8" href="$a00043.html" title="{tbb::internal::aligned\l_storage\&lt; value_type,\l size \&gt;\n||}" alt="" coords="265,5,416,112"/>
<area shape="rect" id="node10" href="$a00043.html" title="{tbb::internal::aligned\l_storage\&lt; T, sizeof(T)\&gt;\n||}" alt="" coords="197,219,356,311"/>
<area shape="rect" id="node14" href="$a00043.html" title="{tbb::internal::aligned\l_storage\&lt; tbb::internal\l::rml::private_worker *,\l sizeof(tbb::internal::rml\l::private_worker *)\&gt;\n||}" alt="" coords="387,335,545,471"/>
<area shape="rect" id="node21" href="$a00043.html" title="{tbb::internal::aligned\l_storage\&lt; state_t, sizeof\l(state_t)\&gt;\n||}" alt="" coords="579,590,745,697"/>
<area shape="rect" id="node9" href="$a00083.html" title="Base class that provides basic functionality for atomic&lt;T&gt; without fetch_and_add. ..." alt="" coords="189,495,348,792"/>
<area shape="rect" id="node11" href="$a00079.html" title="Primary template for atomic. " alt="" coords="188,965,307,1086"/>
<area shape="rect" id="node13" href="$a00083.html" title="{tbb::internal::atomic\l_impl\&lt; tbb::internal\l::rml::private_worker * \&gt;\n||+ atomic_impl()\l+ atomic_impl()\l+ fetch_and_store()\l+ fetch_and_store()\l+ compare_and_swap()\l+ compare_and_swap()\l+ operator value_type()\l+ load()\l+ load()\l+ store()\l+ store()\l# store_with_release()\l&#45; to_bits()\l&#45; to_value()\l&#45; to_bits_ref()\l}" alt="" coords="331,869,494,1181"/>
<area shape="rect" id="node20" href="$a00083.html" title="{tbb::internal::atomic\l_impl\&lt; state_t \&gt;\n||+ atomic_impl()\l+ atomic_impl()\l+ fetch_and_store()\l+ fetch_and_store()\l+ compare_and_swap()\l+ compare_and_swap()\l+ operator value_type()\l+ load()\l+ load()\l+ store()\l+ store()\l# store_with_release()\l&#45; to_bits()\l&#45; to_value()\l&#45; to_bits_ref()\l}" alt="" coords="541,877,700,1174"/>
<area shape="rect" id="node12" href="$a00079.html" title="{tbb::atomic\&lt; tbb::internal\l::rml::private_worker * \&gt;\n||+ atomic()\l+ atomic()\l+ operator=()\l+ operator=()\l}" alt="" coords="172,1259,339,1395"/>
<area shape="rect" id="node19" href="$a00079.html" title="{tbb::atomic\&lt; state_t \&gt;\n||+ atomic()\l+ atomic()\l+ operator=()\l+ operator=()\l}" alt="" coords="551,1266,701,1387"/>
<area shape="rect" id="node15" href="$a00559.html" title="{tbb::internal::rml\l::padded_private_worker\n|&#45; pad\l|+ padded_private_worker()\l}" alt="" coords="277,2061,453,2153"/>
</map>
