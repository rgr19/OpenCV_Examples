<map id="tbb::flow::interface10::async_node&lt; Input, Output, Policy, Allocator &gt;" name="tbb::flow::interface10::async_node&lt; Input, Output, Policy, Allocator &gt;">
<area shape="rect" id="node2" href="$a00508.html" title="{tbb::flow::interface10\l::multifunction_node\&lt;\l Input, tuple\&lt; Output \&gt;\l, Policy, Allocator \&gt;\n|# N\l|+ multifunction_node()\l+ multifunction_node()\l# reset_node()\l}" alt="" coords="240,2979,395,3129"/>
<area shape="rect" id="node3" href="$a00310.html" title="The base of all graph nodes. " alt="" coords="11,2470,155,2621"/>
<area shape="rect" id="node14" href="$a00508.html" title="implements a function node that supports Input &#45;&gt; (set of outputs) " alt="" coords="326,2751,477,2901"/>
<area shape="rect" id="node4" href="$a00516.html" title="Base class for types that should not be copied or assigned. " alt="" coords="5,1209,152,1301"/>
<area shape="rect" id="node5" href="$a00515.html" title="Base class for types that should not be assigned. " alt="" coords="195,492,352,569"/>
<area shape="rect" id="node7" href="$a00292.html" title="{tbb::flow::interface10\l::internal::function_input\l_base\&lt; Input, Policy, Allocator,\l multifunction_input\&lt; Input,\l internal::wrap_tuple_elements\l\&lt; tbb::flow::tuple_size\&lt; tuple\l\&lt; Output \&gt; \&gt;::value, internal::multifunction\l_output, tuple\&lt; Output \&gt; \&gt;::type, Policy,\l Allocator \&gt; \&gt;\n|# my_graph_ref\l# my_max_concurrency\l# my_concurrency\l# my_queue\l# my_predecessors\l&#45; forwarder_busy\l&#45; my_aggregator\l|+ __TBB_STATIC_ASSERT()\l+ function_input_base()\l+ function_input_base()\l+ ~function_input_base()\l+ try_put_task()\l+ register_predecessor()\l+ remove_predecessor()\l# reset_function_input_base()\l# reset_receiver()\l# graph_reference()\l# try_get_postponed_task()\l&#45; perform_queued_requests()\l&#45; handle_operations()\l&#45; internal_try_put_task()\l&#45; internal_forward()\l&#45; internal_try_put_bypass()\l&#45; try_put_task_impl()\l&#45; try_put_task_impl()\l&#45; apply_body_bypass()\l&#45; create_body_task()\l&#45; forward_task()\l&#45; create_forward_task()\l&#45; spawn_forward_task()\l}" alt="" coords="117,1331,385,1936"/>
<area shape="rect" id="node11" href="$a00292.html" title="Input and scheduling for a function node that takes a type Input as input. " alt="" coords="437,648,635,1180"/>
<area shape="rect" id="node13" href="$a00292.html" title="{tbb::flow::interface10\l::internal::function_input\l_base\&lt; Input, Policy, A,\l multifunction_input\&lt; Input,\l OutputPortSet, Policy, A \&gt; \&gt;\n|# my_graph_ref\l# my_max_concurrency\l# my_concurrency\l# my_queue\l# my_predecessors\l&#45; forwarder_busy\l&#45; my_aggregator\l|+ __TBB_STATIC_ASSERT()\l+ function_input_base()\l+ function_input_base()\l+ ~function_input_base()\l+ try_put_task()\l+ register_predecessor()\l+ remove_predecessor()\l# reset_function_input_base()\l# reset_receiver()\l# graph_reference()\l# try_get_postponed_task()\l&#45; perform_queued_requests()\l&#45; handle_operations()\l&#45; internal_try_put_task()\l&#45; internal_forward()\l&#45; internal_try_put_bypass()\l&#45; try_put_task_impl()\l&#45; try_put_task_impl()\l&#45; apply_body_bypass()\l&#45; create_body_task()\l&#45; forward_task()\l&#45; create_forward_task()\l&#45; spawn_forward_task()\l}" alt="" coords="429,1360,627,1907"/>
<area shape="rect" id="node16" href="$a00292.html" title="{tbb::flow::interface10\l::internal::function_input\l_base\&lt; Input, Policy, Allocator,\l multifunction_input\&lt; Input,\l internal::wrap_tuple_elements\l\&lt; tbb::flow::tuple_size\&lt; Output\l \&gt;::value, internal::multifunction\l_output, Output \&gt;::type, Policy, Allocator \&gt; \&gt;\n|# my_graph_ref\l# my_max_concurrency\l# my_concurrency\l# my_queue\l# my_predecessors\l&#45; forwarder_busy\l&#45; my_aggregator\l|+ __TBB_STATIC_ASSERT()\l+ function_input_base()\l+ function_input_base()\l+ ~function_input_base()\l+ try_put_task()\l+ register_predecessor()\l+ remove_predecessor()\l# reset_function_input_base()\l# reset_receiver()\l# graph_reference()\l# try_get_postponed_task()\l&#45; perform_queued_requests()\l&#45; handle_operations()\l&#45; internal_try_put_task()\l&#45; internal_forward()\l&#45; internal_try_put_bypass()\l&#45; try_put_task_impl()\l&#45; try_put_task_impl()\l&#45; apply_body_bypass()\l&#45; create_body_task()\l&#45; forward_task()\l&#45; create_forward_task()\l&#45; spawn_forward_task()\l}" alt="" coords="765,1338,1049,1929"/>
<area shape="rect" id="node6" href="$a00507.html" title="{tbb::flow::interface10\l::internal::multifunction\l_input\&lt; Input, internal::\lwrap_tuple_elements\&lt; tbb::\lflow::tuple_size\&lt; tuple\&lt; Output\l \&gt; \&gt;::value, internal::multifunction\l_output, tuple\&lt; Output \&gt; \&gt;::type,\l Policy, Allocator \&gt;\n|+ N\l# my_body\l# my_init_body\l# my_output_ports\l|+ multifunction_input()\l+ multifunction_input()\l+ ~multifunction_input()\l+ copy_function_object()\l+ apply_body_impl_bypass()\l+ output_ports()\l# reset()\l}" alt="" coords="179,2389,397,2701"/>
<area shape="rect" id="node8" href="$a00644.html" title="{tbb::flow::interface10\l::receiver\&lt; Input \&gt;\n||+ try_put()\l+ try_put()\l# try_put_task_wrapper()\l# try_put_task()\l}" alt="" coords="549,463,715,599"/>
<area shape="rect" id="node9" href="$a00875.html" title="{tbb::flow::interface10\l::internal::untyped_receiver\n||+ ~untyped_receiver()\l+ try_put()\l+ register_predecessor()\l+ remove_predecessor()\l# try_put_task()\l# try_put_task_wrapper()\l# graph_reference()\l# reset_receiver()\l# is_continue_receiver()\l}" alt="" coords="560,5,739,215"/>
<area shape="rect" id="node10" href="$a00644.html" title="Pure virtual template class that defines a receiver of messages of type T. " alt="" coords="649,264,815,400"/>
<area shape="rect" id="node12" href="$a00507.html" title="Implements methods for a function node that takes a type Input as input. " alt="" coords="427,1985,621,2239"/>
<area shape="rect" id="node15" href="$a00507.html" title="{tbb::flow::interface10\l::internal::multifunction\l_input\&lt; Input, internal::\lwrap_tuple_elements\&lt; tbb::\lflow::tuple_size\&lt; Output \&gt;\l::value, internal::multifunction\l_output, Output \&gt;::type, Policy,\l Allocator \&gt;\n|+ N\l# my_body\l# my_init_body\l# my_output_ports\l|+ multifunction_input()\l+ multifunction_input()\l+ ~multifunction_input()\l+ copy_function_object()\l+ apply_body_impl_bypass()\l+ output_ports()\l# reset()\l}" alt="" coords="421,2389,627,2701"/>
<area shape="rect" id="node17" href="$a00702.html" title="{tbb::flow::interface10\l::sender\&lt; Output \&gt;\n||+ try_get()\l+ try_reserve()\l# try_get_wrapper()\l# try_reserve_wrapper()\l}" alt="" coords="541,2986,699,3122"/>
<area shape="rect" id="node18" href="$a00876.html" title="{tbb::flow::interface10\l::internal::untyped_sender\n||+ ~untyped_sender()\l+ register_successor()\l+ remove_successor()\l+ try_release()\l+ try_consume()\l# try_get()\l# try_reserve()\l# try_get_wrapper()\l# try_reserve_wrapper()\l}" alt="" coords="651,2441,823,2650"/>
<area shape="rect" id="node19" href="$a00702.html" title="Forward declaration section. " alt="" coords="658,2758,817,2894"/>
</map>
